import 'package:flutter/material.dart';

class LinuxCommand {
  final String name;
  final String description;
  final String syntax;
  final List<String> examples;
  final CommandLevel level;
  final CommandCategory category;
  final List<String> options;
  final List<String> relatedCommands;
  final String? warning;
  final List<String> tips;
  final List<CommandExample> detailedExamples;
  final Map<String, String> commonErrors;
  final String? manualLink;
  final List<String> prerequisites;
  final int popularityScore;

  const LinuxCommand({
    required this.name,
    required this.description,
    required this.syntax,
    required this.examples,
    required this.level,
    required this.category,
    this.options = const [],
    this.relatedCommands = const [],
    this.warning,
    this.tips = const [],
    this.detailedExamples = const [],
    this.commonErrors = const {},
    this.manualLink,
    this.prerequisites = const [],
    this.popularityScore = 0,
  });

  Map<String, dynamic> toJson() {
    return {
      'name': name,
      'description': description,
      'syntax': syntax,
      'examples': examples,
      'level': level.name,
      'category': category.name,
      'options': options,
      'relatedCommands': relatedCommands,
      'warning': warning,
      'tips': tips,
      'detailedExamples': detailedExamples.map((e) => e.toJson()).toList(),
      'commonErrors': commonErrors,
      'manualLink': manualLink,
      'prerequisites': prerequisites,
      'popularityScore': popularityScore,
    };
  }

  factory LinuxCommand.fromJson(Map<String, dynamic> json) {
    return LinuxCommand(
      name: json['name'],
      description: json['description'],
      syntax: json['syntax'],
      examples: List<String>.from(json['examples']),
      level: CommandLevel.values.firstWhere((e) => e.name == json['level']),
      category: CommandCategory.values.firstWhere((e) => e.name == json['category']),
      options: List<String>.from(json['options'] ?? []),
      relatedCommands: List<String>.from(json['relatedCommands'] ?? []),
      warning: json['warning'],
      tips: List<String>.from(json['tips'] ?? []),
      detailedExamples: (json['detailedExamples'] as List?)
          ?.map((e) => CommandExample.fromJson(e))
          .toList() ?? [],
      commonErrors: Map<String, String>.from(json['commonErrors'] ?? {}),
      manualLink: json['manualLink'],
      prerequisites: List<String>.from(json['prerequisites'] ?? []),
      popularityScore: json['popularityScore'] ?? 0,
    );
  }
}

class CommandExample {
  final String command;
  final String description;
  final String? output;
  final String? explanation;
  final bool isInteractive;

  const CommandExample({
    required this.command,
    required this.description,
    this.output,
    this.explanation,
    this.isInteractive = false,
  });

  Map<String, dynamic> toJson() {
    return {
      'command': command,
      'description': description,
      'output': output,
      'explanation': explanation,
      'isInteractive': isInteractive,
    };
  }

  factory CommandExample.fromJson(Map<String, dynamic> json) {
    return CommandExample(
      command: json['command'],
      description: json['description'],
      output: json['output'],
      explanation: json['explanation'],
      isInteractive: json['isInteractive'] ?? false,
    );
  }
}

enum CommandLevel {
  beginner,
  intermediate,
  advanced,
  expert,
}

extension CommandLevelExtension on CommandLevel {
  String get displayName {
    switch (this) {
      case CommandLevel.beginner:
        return '‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô';
      case CommandLevel.intermediate:
        return '‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏•‡∏≤‡∏á';
      case CommandLevel.advanced:
        return '‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏π‡∏á';
      case CommandLevel.expert:
        return '‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç';
    }
  }

  Color get color {
    switch (this) {
      case CommandLevel.beginner:
        return Colors.green;
      case CommandLevel.intermediate:
        return Colors.orange;
      case CommandLevel.advanced:
        return Colors.red;
      case CommandLevel.expert:
        return Colors.purple;
    }
  }

  String get emoji {
    switch (this) {
      case CommandLevel.beginner:
        return 'üå±';
      case CommandLevel.intermediate:
        return 'üåø';
      case CommandLevel.advanced:
        return 'üå≥';
      case CommandLevel.expert:
        return 'üèÜ';
    }
  }
}

enum CommandCategory {
  fileManagement,
  navigation,
  textProcessing,
  permissions,
  systemAdmin,
  processManagement,
  networking,
  archive,
  automation,
  development,
  monitoring,
  search,
}

extension CommandCategoryExtension on CommandCategory {
  String get displayName {
    switch (this) {
      case CommandCategory.fileManagement:
        return '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå';
      case CommandCategory.navigation:
        return '‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á';
      case CommandCategory.textProcessing:
        return '‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°';
      case CommandCategory.permissions:
        return '‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå';
      case CommandCategory.systemAdmin:
        return '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö';
      case CommandCategory.processManagement:
        return '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£';
      case CommandCategory.networking:
        return '‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢';
      case CommandCategory.archive:
        return '‡∏ö‡∏µ‡∏ö‡∏≠‡∏±‡∏î‡πÑ‡∏ü‡∏•‡πå';
      case CommandCategory.automation:
        return '‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥';
      case CommandCategory.development:
        return '‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤';
      case CommandCategory.monitoring:
        return '‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö';
      case CommandCategory.search:
        return '‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤';
    }
  }

  String get emoji {
    switch (this) {
      case CommandCategory.fileManagement:
        return 'üìÅ';
      case CommandCategory.navigation:
        return 'üß≠';
      case CommandCategory.textProcessing:
        return 'üìù';
      case CommandCategory.permissions:
        return 'üîê';
      case CommandCategory.systemAdmin:
        return '‚öôÔ∏è';
      case CommandCategory.processManagement:
        return '‚ö°';
      case CommandCategory.networking:
        return 'üåê';
      case CommandCategory.archive:
        return 'üì¶';
      case CommandCategory.automation:
        return 'ü§ñ';
      case CommandCategory.development:
        return 'üíª';
      case CommandCategory.monitoring:
        return 'üìä';
      case CommandCategory.search:
        return 'üîç';
    }
  }

  Color get color {
    switch (this) {
      case CommandCategory.fileManagement:
        return const Color(0xFF2196F3);
      case CommandCategory.navigation:
        return const Color(0xFF4CAF50);
      case CommandCategory.textProcessing:
        return const Color(0xFFFF9800);
      case CommandCategory.permissions:
        return const Color(0xFFE91E63);
      case CommandCategory.systemAdmin:
        return const Color(0xFF9C27B0);
      case CommandCategory.processManagement:
        return const Color(0xFF607D8B);
      case CommandCategory.networking:
        return const Color(0xFF795548);
      case CommandCategory.archive:
        return const Color(0xFF00BCD4);
      case CommandCategory.automation:
        return const Color(0xFFFF5722);
      case CommandCategory.development:
        return const Color(0xFF3F51B5);
      case CommandCategory.monitoring:
        return const Color(0xFF8BC34A);
      case CommandCategory.search:
        return const Color(0xFFFFEB3B);
    }
  }
}

class LinuxCommandDatabase {
  static final LinuxCommandDatabase _instance = LinuxCommandDatabase._internal();
  factory LinuxCommandDatabase() => _instance;
  LinuxCommandDatabase._internal();

  final Map<String, LinuxCommand> _commands = {
    'ls': LinuxCommand(
      name: 'ls',
      description: '‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏ô‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ',
      syntax: 'ls [options] [directory]',
      examples: ['ls', 'ls -la', 'ls -lh /home', 'ls -t *.txt'],
      level: CommandLevel.beginner,
      category: CommandCategory.fileManagement,
      options: [
        '-l: ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏ö‡∏ö‡∏¢‡∏≤‡∏ß',
        '-a: ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ã‡πà‡∏≠‡∏ô',
        '-h: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢',
        '-t: ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç',
        '-r: ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö',
        '-R: ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡πà‡∏≠‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
      ],
      relatedCommands: ['dir', 'tree', 'find'],
      tips: [
        '‡πÉ‡∏ä‡πâ ls -la ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡∏ã‡πà‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î',
        'ls -lh ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ (KB, MB, GB)',
        'ls -t ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î',
      ],
      detailedExamples: [
        CommandExample(
          command: 'ls -la',
          description: '‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î',
          output: 'drwxr-xr-x 5 user user 4096 Jan 15 10:30 Documents\n-rw-r--r-- 1 user user 1024 Jan 14 15:20 file.txt',
          explanation: '‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå, ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á, ‡∏Ç‡∏ô‡∏≤‡∏î ‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç',
        ),
        CommandExample(
          command: 'ls -lh',
          description: '‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢',
          output: '-rw-r--r-- 1 user user 1.5K Jan 14 15:20 file.txt\n-rw-r--r-- 1 user user 2.3M Jan 13 09:15 image.jpg',
        ),
      ],
      popularityScore: 100,
    ),

    'cd': LinuxCommand(
      name: 'cd',
      description: '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô',
      syntax: 'cd [directory]',
      examples: ['cd /home', 'cd ..', 'cd ~', 'cd -'],
      level: CommandLevel.beginner,
      category: CommandCategory.navigation,
      relatedCommands: ['pwd', 'ls', 'mkdir'],
      tips: [
        'cd ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏à‡∏∞‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà home directory',
        'cd - ‡∏à‡∏∞‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤',
        'cd .. ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡πÅ‡∏°‡πà',
        'cd ~ ‡πÑ‡∏õ‡∏¢‡∏±‡∏á home directory',
      ],
      detailedExamples: [
        CommandExample(
          command: 'cd /usr/local/bin',
          description: '‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏',
          explanation: '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ /usr/local/bin',
        ),
        CommandExample(
          command: 'cd ..',
          description: '‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡πÅ‡∏°‡πà',
          explanation: '.. ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏£‡∏∞‡∏î‡∏±‡∏ö',
        ),
      ],
      popularityScore: 95,
    ),

    'pwd': LinuxCommand(
      name: 'pwd',
      description: '‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô',
      syntax: 'pwd',
      examples: ['pwd'],
      level: CommandLevel.beginner,
      category: CommandCategory.navigation,
      relatedCommands: ['cd', 'ls'],
      tips: [
        'pwd ‡∏¢‡πà‡∏≠‡∏°‡∏≤‡∏à‡∏≤‡∏Å "print working directory"',
        '‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏£‡∏≤‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡πÑ‡∏´‡∏ô',
      ],
      detailedExamples: [
        CommandExample(
          command: 'pwd',
          description: '‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô',
          output: '/home/user/Documents',
          explanation: '‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏ï‡πá‡∏°‡∏Ç‡∏≠‡∏á‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô',
        ),
      ],
      popularityScore: 85,
    ),

    'mkdir': LinuxCommand(
      name: 'mkdir',
      description: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡πÉ‡∏´‡∏°‡πà',
      syntax: 'mkdir [options] directory_name',
      examples: ['mkdir newfolder', 'mkdir -p path/to/folder', 'mkdir dir1 dir2 dir3'],
      level: CommandLevel.beginner,
      category: CommandCategory.fileManagement,
      options: [
        '-p: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡πÅ‡∏°‡πà‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ',
        '-m: ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå',
        '-v: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
      ],
      relatedCommands: ['rmdir', 'rm', 'ls'],
      tips: [
        '‡πÉ‡∏ä‡πâ -p ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô',
        '‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏•‡∏≤‡∏¢‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ',
      ],
      detailedExamples: [
        CommandExample(
          command: 'mkdir -p project/src/components',
          description: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏∞‡∏î‡∏±‡∏ö',
          explanation: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå project, src ‡πÅ‡∏•‡∏∞ components ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ',
        ),
      ],
      popularityScore: 80,
    ),

    'rm': LinuxCommand(
      name: 'rm',
      description: '‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ',
      syntax: 'rm [options] file/directory',
      examples: ['rm file.txt', 'rm -rf folder', 'rm *.tmp'],
      level: CommandLevel.intermediate,
      category: CommandCategory.fileManagement,
      options: [
        '-r: ‡∏•‡∏ö‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
        '-f: ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏•‡∏ö‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ñ‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
        '-i: ‡∏ñ‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏ö',
        '-v: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
      ],
      relatedCommands: ['rmdir', 'mv', 'cp'],
      warning: '‚ö†Ô∏è ‡∏£‡∏∞‡∏ß‡∏±‡∏á! rm -rf ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ñ‡∏≤‡∏ß‡∏£‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡πÑ‡∏î‡πâ',
      tips: [
        '‡πÉ‡∏ä‡πâ rm -i ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢',
        '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ rm -rf',
        '‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ rm -rf /* ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡πá‡∏î‡∏Ç‡∏≤‡∏î',
      ],
      detailedExamples: [
        CommandExample(
          command: 'rm -i file.txt',
          description: '‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏î‡∏¢‡∏ñ‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô',
          output: 'rm: remove regular file \'file.txt\'? y',
          explanation: '‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏ñ‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏•‡∏ö ‡∏ï‡∏≠‡∏ö y ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
        ),
        CommandExample(
          command: 'rm -rf temp/',
          description: '‡∏•‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
          explanation: '‡∏•‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå temp ‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ñ‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
          isInteractive: true,
        ),
      ],
      commonErrors: {
        'rm: cannot remove \'file\': No such file or directory': '‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà',
        'rm: cannot remove \'dir\': Is a directory': '‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ -r ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ',
        'rm: cannot remove \'file\': Permission denied': '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ',
      },
      popularityScore: 75,
    ),

    'cp': LinuxCommand(
      name: 'cp',
      description: '‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ',
      syntax: 'cp [options] source destination',
      examples: ['cp file.txt backup.txt', 'cp -r folder1 folder2', 'cp *.txt /backup/'],
      level: CommandLevel.intermediate,
      category: CommandCategory.fileManagement,
      options: [
        '-r: ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡πÅ‡∏ö‡∏ö recursive',
        '-i: ‡∏ñ‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö',
        '-u: ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà‡∏Å‡∏ß‡πà‡∏≤',
        '-v: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
        '-p: ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• metadata',
      ],
      relatedCommands: ['mv', 'rsync', 'scp'],
      tips: [
        '‡πÉ‡∏ä‡πâ -r ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå',
        '‡πÉ‡∏ä‡πâ -i ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç',
        '‡πÉ‡∏ä‡πâ wildcards (*) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå',
      ],
      detailedExamples: [
        CommandExample(
          command: 'cp -r project/ backup/',
          description: '‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
          explanation: '‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå project ‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á backup',
        ),
        CommandExample(
          command: 'cp *.jpg images/',
          description: '‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå jpg ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
          explanation: '‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• .jpg ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå images',
        ),
      ],
      popularityScore: 70,
    ),

    'mv': LinuxCommand(
      name: 'mv',
      description: '‡∏¢‡πâ‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå/‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ',
      syntax: 'mv [options] source destination',
      examples: ['mv old.txt new.txt', 'mv file.txt /tmp/', 'mv folder1 folder2'],
      level: CommandLevel.intermediate,
      category: CommandCategory.fileManagement,
      options: [
        '-i: ‡∏ñ‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö',
        '-u: ‡∏¢‡πâ‡∏≤‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà‡∏Å‡∏ß‡πà‡∏≤',
        '-v: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
        '-n: ‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà',
      ],
      relatedCommands: ['cp', 'rm', 'rename'],
      tips: [
        'mv ‡∏ó‡∏≥‡∏ó‡∏±‡πâ‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡πâ‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠',
        '‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ -r ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå',
        '‡πÉ‡∏ä‡πâ -i ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢',
      ],
      detailedExamples: [
        CommandExample(
          command: 'mv report.doc reports/',
          description: '‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏≠‡∏∑‡πà‡∏ô',
          explanation: '‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå report.doc ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå reports',
        ),
        CommandExample(
          command: 'mv oldname.txt newname.txt',
          description: '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå',
          explanation: '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å oldname.txt ‡πÄ‡∏õ‡πá‡∏ô newname.txt',
        ),
      ],
      popularityScore: 65,
    ),

    'grep': LinuxCommand(
      name: 'grep',
      description: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå',
      syntax: 'grep [options] pattern file',
      examples: ['grep "error" log.txt', 'grep -r "function" .', 'grep -i "hello" *.txt'],
      level: CommandLevel.intermediate,
      category: CommandCategory.textProcessing,
      options: [
        '-i: ‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å‡πÉ‡∏´‡∏ç‡πà',
        '-r: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡πà‡∏≠‡∏¢',
        '-n: ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î',
        '-v: ‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö pattern',
        '-c: ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô',
        '-l: ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏û‡∏ö',
      ],
      relatedCommands: ['find', 'awk', 'sed'],
      tips: [
        '‡πÉ‡∏ä‡πâ grep -i ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå',
        '‡πÉ‡∏ä‡πâ grep -r ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡πà‡∏≠‡∏¢',
        '‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ regular expressions ‡πÑ‡∏î‡πâ',
      ],
      detailedExamples: [
        CommandExample(
          command: 'grep -n "error" /var/log/syslog',
          description: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ error ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î',
          output: '45: Jan 15 10:30:15 server error: connection failed\n67: Jan 15 11:20:32 server error: timeout',
        ),
        CommandExample(
          command: 'grep -r "TODO" src/',
          description: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ TODO ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå src ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
          explanation: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ TODO ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå src ‡πÅ‡∏•‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡πà‡∏≠‡∏¢',
        ),
      ],
      popularityScore: 85,
    ),

    'find': LinuxCommand(
      name: 'find',
      description: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ',
      syntax: 'find [path] [expression]',
      examples: ['find . -name "*.txt"', 'find /home -user john', 'find . -type f -size +10M'],
      level: CommandLevel.advanced,
      category: CommandCategory.search,
      options: [
        '-name: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠',
        '-type: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó (f=file, d=directory)',
        '-size: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≤‡∏°‡∏Ç‡∏ô‡∏≤‡∏î',
        '-user: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≤‡∏°‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á',
        '-mtime: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç',
        '-exec: ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏û‡∏ö',
      ],
      relatedCommands: ['locate', 'grep', 'ls'],
      tips: [
        '‡πÉ‡∏ä‡πâ -iname ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå',
        '‡πÉ‡∏ä‡πâ -exec ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏û‡∏ö',
        '‡πÉ‡∏ä‡πâ wildcards (*) ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤',
      ],
      detailedExamples: [
        CommandExample(
          command: 'find . -name "*.log" -mtime -7',
          description: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå .log ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 7 ‡∏ß‡∏±‡∏ô',
          explanation: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• .log ‡πÅ‡∏•‡∏∞‡∏ñ‡∏π‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 7 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤',
        ),
        CommandExample(
          command: 'find /var -type f -size +100M',
          description: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà‡∏Å‡∏ß‡πà‡∏≤ 100MB',
          explanation: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå /var ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 100 ‡πÄ‡∏°‡∏Å‡∏∞‡πÑ‡∏ö‡∏ï‡πå',
        ),
      ],
      popularityScore: 70,
    ),

    'chmod': LinuxCommand(
      name: 'chmod',
      description: '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå',
      syntax: 'chmod [permissions] file',
      examples: ['chmod 755 script.sh', 'chmod +x file', 'chmod u+w,g-r file.txt'],
      level: CommandLevel.advanced,
      category: CommandCategory.permissions,
      options: [
        '+: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå',
        '-: ‡∏•‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå',
        '=: ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå',
        'u: user (‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á)',
        'g: group (‡∏Å‡∏•‡∏∏‡πà‡∏°)',
        'o: others (‡∏≠‡∏∑‡πà‡∏ô‡πÜ)',
        'a: all (‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô)',
      ],
      relatedCommands: ['chown', 'chgrp', 'umask'],
      warning: '‚ö†Ô∏è ‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏∞‡∏ö‡∏ö ‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡πÑ‡∏î‡πâ',
      tips: [
        '755 = rwxr-xr-x (‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ó‡∏≥‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏î‡πâ, ‡∏≠‡∏∑‡πà‡∏ô‡πÜ‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ô‡πÑ‡∏î‡πâ)',
        '644 = rw-r--r-- (‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ, ‡∏≠‡∏∑‡πà‡∏ô‡πÜ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ)',
        'chmod +x ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏±‡∏ô‡πÑ‡∏î‡πâ',
      ],
      detailedExamples: [
        CommandExample(
          command: 'chmod 755 script.sh',
          description: '‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå execute ‡∏Å‡∏±‡∏ö script',
          explanation: '7=rwx (‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á), 5=r-x (‡∏Å‡∏•‡∏∏‡πà‡∏°), 5=r-x (‡∏≠‡∏∑‡πà‡∏ô‡πÜ)',
        ),
        CommandExample(
          command: 'chmod u+x,g+w file.txt',
          description: '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå execute ‡πÉ‡∏´‡πâ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á ‡πÅ‡∏•‡∏∞ write ‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏∏‡πà‡∏°',
          explanation: 'u+x = ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå execute ‡πÉ‡∏´‡πâ user, g+w = ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå write ‡πÉ‡∏´‡πâ group',
        ),
      ],
      popularityScore: 60,
    ),

    'sudo': LinuxCommand(
      name: 'sudo',
      description: '‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå administrator',
      syntax: 'sudo command',
      examples: ['sudo apt update', 'sudo systemctl restart nginx', 'sudo chmod 777 /tmp'],
      level: CommandLevel.intermediate,
      category: CommandCategory.systemAdmin,
      options: [
        '-u: ‡∏£‡∏±‡∏ô‡πÉ‡∏ô‡∏ô‡∏≤‡∏° user ‡∏≠‡∏∑‡πà‡∏ô',
        '-i: ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà interactive shell',
        '-s: ‡∏£‡∏±‡∏ô shell',
        '-l: ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ',
      ],
      relatedCommands: ['su', 'whoami', 'id'],
      warning: '‚ö†Ô∏è ‡πÉ‡∏ä‡πâ sudo ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö',
      tips: [
        'sudo ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏≠‡∏á ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà root',
        '‡πÉ‡∏ä‡πâ sudo -l ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ',
        '‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ sudo su - ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô',
      ],
      prerequisites: ['‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° sudo ‡∏´‡∏£‡∏∑‡∏≠ wheel'],
      detailedExamples: [
        CommandExample(
          command: 'sudo apt update',
          description: '‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à (‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå admin)',
          explanation: '‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á apt update ‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå root ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à',
        ),
        CommandExample(
          command: 'sudo -u www-data ls /var/www',
          description: '‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô‡∏ô‡∏≤‡∏° user ‡∏≠‡∏∑‡πà‡∏ô',
          explanation: '‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ls ‡πÉ‡∏ô‡∏ô‡∏≤‡∏° user www-data',
        ),
      ],
      popularityScore: 90,
    ),

    'ps': LinuxCommand(
      name: 'ps',
      description: '‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà',
      syntax: 'ps [options]',
      examples: ['ps aux', 'ps -ef', 'ps -u username'],
      level: CommandLevel.intermediate,
      category: CommandCategory.processManagement,
      options: [
        'aux: ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
        '-e: ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
        '-f: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°',
        '-u: ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á user ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏',
        '--forest: ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ö‡∏ö tree',
      ],
      relatedCommands: ['top', 'htop', 'kill', 'killall'],
      tips: [
        'ps aux ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î',
        '‡πÉ‡∏ä‡πâ grep ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö ps ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£',
        'PID ‡∏Ñ‡∏∑‡∏≠‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£',
      ],
      detailedExamples: [
        CommandExample(
          command: 'ps aux | grep apache',
          description: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£ Apache',
          output: 'root     1234  0.0  1.2 123456  7890 ?  S  10:30  0:01 /usr/sbin/apache2',
          explanation: '‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ apache ‡∏û‡∏£‡πâ‡∏≠‡∏° PID ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£',
        ),
      ],
      popularityScore: 75,
    ),

    'top': LinuxCommand(
      name: 'top',
      description: '‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏ö‡∏ö real-time',
      syntax: 'top [options]',
      examples: ['top', 'top -u username', 'top -p 1234'],
      level: CommandLevel.intermediate,
      category: CommandCategory.monitoring,
      options: [
        '-u: ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á user ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏',
        '-p: ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏ PID',
        '-d: ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó',
        '-n: ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≠‡∏Å',
      ],
      relatedCommands: ['htop', 'ps', 'iostat', 'vmstat'],
      tips: [
        '‡∏Å‡∏î q ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å top',
        '‡∏Å‡∏î k ‡πÄ‡∏û‡∏∑‡πà‡∏≠ kill ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£',
        '‡∏Å‡∏î M ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ memory',
        '‡∏Å‡∏î P ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ CPU',
      ],
      detailedExamples: [
        CommandExample(
          command: 'top -d 1',
          description: '‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏∏‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏µ',
          explanation: '‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ó‡∏∏‡∏Å‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ',
          isInteractive: true,
        ),
      ],
      popularityScore: 80,
    ),

    'tar': LinuxCommand(
      name: 'tar',
      description: '‡∏ö‡∏µ‡∏ö‡∏≠‡∏±‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏ï‡∏Å‡πÑ‡∏ü‡∏•‡πå',
      syntax: 'tar [options] archive files',
      examples: ['tar -czf backup.tar.gz files/', 'tar -xzf archive.tar.gz', 'tar -tzf archive.tar.gz'],
      level: CommandLevel.intermediate,
      category: CommandCategory.archive,
      options: [
        '-c: ‡∏™‡∏£‡πâ‡∏≤‡∏á archive',
        '-x: ‡πÅ‡∏ï‡∏Å archive',
        '-z: ‡πÉ‡∏ä‡πâ gzip compression',
        '-j: ‡πÉ‡∏ä‡πâ bzip2 compression',
        '-f: ‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå archive',
        '-v: ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î',
        '-t: ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ô archive',
      ],
      relatedCommands: ['gzip', 'zip', 'unzip'],
      tips: [
        'tar -czf ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏µ‡∏ö‡∏≠‡∏±‡∏î, tar -xzf ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡∏Å‡πÑ‡∏ü‡∏•‡πå',
        '‡πÉ‡∏ä‡πâ -v ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤',
        '.tar.gz ‡πÅ‡∏•‡∏∞ .tgz ‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô',
      ],
      detailedExamples: [
        CommandExample(
          command: 'tar -czf backup.tar.gz /home/user/documents',
          description: '‡∏ö‡∏µ‡∏ö‡∏≠‡∏±‡∏î‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå documents',
          explanation: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå backup.tar.gz ‡∏à‡∏≤‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå documents',
        ),
        CommandExample(
          command: 'tar -xzf backup.tar.gz -C /tmp',
          description: '‡πÅ‡∏ï‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏',
          explanation: '‡πÅ‡∏ï‡∏Å‡πÑ‡∏ü‡∏•‡πå backup.tar.gz ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå /tmp',
        ),
      ],
      popularityScore: 65,
    ),
  };

  Map<String, LinuxCommand> getAllCommands() => _commands;

  LinuxCommand? getCommand(String name) => _commands[name.toLowerCase()];

  List<LinuxCommand> getCommandsByLevel(CommandLevel level) {
    return _commands.values.where((cmd) => cmd.level == level).toList();
  }

  List<LinuxCommand> getCommandsByCategory(CommandCategory category) {
    return _commands.values.where((cmd) => cmd.category == category).toList();
  }

  List<LinuxCommand> searchCommands(String query) {
    query = query.toLowerCase();
    return _commands.values.where((cmd) =>
    cmd.name.toLowerCase().contains(query) ||
        cmd.description.toLowerCase().contains(query) ||
        cmd.examples.any((example) => example.toLowerCase().contains(query))
    ).toList();
  }

  List<LinuxCommand> getRecommendedCommands(UserLevel userLevel) {
    CommandLevel targetLevel;
    switch (userLevel) {
      case UserLevel.beginner:
        targetLevel = CommandLevel.beginner;
        break;
      case UserLevel.intermediate:
        targetLevel = CommandLevel.intermediate;
        break;
      case UserLevel.advanced:
        targetLevel = CommandLevel.advanced;
        break;
      case UserLevel.expert:
        targetLevel = CommandLevel.expert;
        break;
    }

    return getCommandsByLevel(targetLevel)
      ..sort((a, b) => b.popularityScore.compareTo(a.popularityScore));
  }

  List<LinuxCommand> getPopularCommands({int limit = 10}) {
    final commands = _commands.values.toList()
      ..sort((a, b) => b.popularityScore.compareTo(a.popularityScore));
    return commands.take(limit).toList();
  }
}

// Quiz related classes
class QuizQuestion {
  final String id;
  final String question;
  final List<String> options;
  final int correctAnswer;
  final String explanation;
  final CommandLevel difficulty;
  final String? relatedCommand;

  const QuizQuestion({
    required this.id,
    required this.question,
    required this.options,
    required this.correctAnswer,
    required this.explanation,
    required this.difficulty,
    this.relatedCommand,
  });

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'question': question,
      'options': options,
      'correctAnswer': correctAnswer,
      'explanation': explanation,
      'difficulty': difficulty.name,
      'relatedCommand': relatedCommand,
    };
  }

  factory QuizQuestion.fromJson(Map<String, dynamic> json) {
    return QuizQuestion(
      id: json['id'],
      question: json['question'],
      options: List<String>.from(json['options']),
      correctAnswer: json['correctAnswer'],
      explanation: json['explanation'],
      difficulty: CommandLevel.values.firstWhere((e) => e.name == json['difficulty']),
      relatedCommand: json['relatedCommand'],
    );
  }
}