question: '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏î‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå?',
options: ['find', 'grep', 'locate', 'search'],
correctAnswer: 1,
explanation: 'grep ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠ pattern ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå',
difficulty: CommandLevel.intermediate,
relatedCommand: 'grep',
),
QuizQuestion(
id: 'q5',
question: 'chmod 755 ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏≠‡∏∞‡πÑ‡∏£?',
options: [
'rwxr-xr-x',
'rw-rw-rw-',
'rwxrwxrwx',
'r--r--r--'
],
correctAnswer: 0,
explanation: '755 = rwxr-xr-x ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ó‡∏≥‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏î‡πâ (rwx), ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ô‡πÑ‡∏î‡πâ (r-x)',
difficulty: CommandLevel.advanced,
relatedCommand: 'chmod',
),
];

Future<Message> generateResponse(String userInput, UserProfile profile) async {
// ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• AI
await Future.delayed(Duration(milliseconds: 800 + _random.nextInt(1200)));

final response = await _analyzeInput(userInput.toLowerCase(), profile);

return Message(
id: 'ai_${DateTime.now().millisecondsSinceEpoch}',
text: response.text,
isUser: false,
timestamp: DateTime.now(),
type: response.type,
command: response.command,
explanation: response.explanation,
category: response.category,
);
}

Future<AIResponse> _analyzeInput(String input, UserProfile profile) async {
// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏Å‡πà‡∏≠‡∏ô
if (_isHelpRequest(input)) {
return _getHelpResponse();
}

if (_isQuizRequest(input)) {
return _generateQuizResponse(profile);
}

if (_isStatsRequest(input)) {
return _getStatsResponse(profile);
}

if (_isResetRequest(input)) {
return _getResetConfirmation();
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Linux
for (String command in _commandDb.getAllCommands().keys) {
if (input.contains(command)) {
_updateUserProgress(profile, command);
return _generateCommandResponse(command, profile);
}
}

// ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå pattern ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
if (_isBeginnerRequest(input)) {
return _getBeginnerRecommendations(profile);
} else if (_isFileManagementRequest(input)) {
return _getFileManagementCommands();
} else if (_isNavigationRequest(input)) {
return _getNavigationCommands();
} else if (_isSearchRequest(input)) {
return _getSearchCommands();
} else if (_isPermissionRequest(input)) {
return _getPermissionCommands();
} else if (_isRecommendationRequest(input)) {
return _getPersonalizedRecommendations(profile);
} else if (_isLevelAssessmentRequest(input)) {
return _getLevelAssessment(profile);
} else if (_isCategoryRequest(input)) {
return _getCategoryOverview();
} else {
return _getGeneralResponse(profile);
}
}

// Helper methods for input detection
bool _isHelpRequest(String input) {
return input.contains('help') || input.contains('‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠') ||
input.contains('‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ') || input.contains('‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥');
}

bool _isQuizRequest(String input) {
return input.contains('‡∏ó‡∏î‡∏™‡∏≠‡∏ö') || input.contains('‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö') ||
input.contains('quiz') || input.contains('‡∏Ç‡πâ‡∏≠‡∏™‡∏≠‡∏ö');
}

bool _isStatsRequest(String input) {
return input.contains('‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥') || input.contains('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤') ||
input.contains('stats') || input.contains('progress');
}

bool _isResetRequest(String input) {
return input.contains('‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï') || input.contains('reset') ||
input.contains('‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà') || input.contains('‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
}

bool _isBeginnerRequest(String input) {
return input.contains('‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô') || input.contains('beginner') ||
input.contains('‡∏°‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà') || input.contains('‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô');
}

bool _isFileManagementRequest(String input) {
return input.contains('‡πÑ‡∏ü‡∏•‡πå') || input.contains('file') ||
input.contains('‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå');
}

bool _isNavigationRequest(String input) {
return input.contains('‡∏ô‡∏≥‡∏ó‡∏≤‡∏á') || input.contains('‡πÄ‡∏î‡∏¥‡∏ô') ||
input.contains('‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå') || input.contains('directory');
}

bool _isSearchRequest(String input) {
return input.contains('‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤') || input.contains('search') ||
input.contains('‡∏´‡∏≤');
}

bool _isPermissionRequest(String input) {
return input.contains('‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå') || input.contains('permission') ||
input.contains('chmod') || input.contains('‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á');
}

bool _isRecommendationRequest(String input) {
return input.contains('‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥') || input.contains('recommend') ||
input.contains('‡∏Ñ‡∏ß‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô');
}

bool _isLevelAssessmentRequest(String input) {
return input.contains('‡∏£‡∏∞‡∏î‡∏±‡∏ö') || input.contains('level') ||
input.contains('‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô') || input.contains('assess');
}

bool _isCategoryRequest(String input) {
return input.contains('‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà') || input.contains('category') ||
input.contains('‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó');
}

// Response generators
AIResponse _getHelpResponse() {
return AIResponse(
text: '''
üìö **‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Linux Learning Assistant**

**üéØ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°:**
‚Ä¢ `ls ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£` - ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞
‚Ä¢ `‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô` - ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö
‚Ä¢ `‡∏ß‡∏¥‡∏ò‡∏µ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå` - ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
‚Ä¢ `‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ` - ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à

**üí° ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©:**
‚Ä¢ `‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥` - ‡∏î‡∏π‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤
‚Ä¢ `‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏â‡∏±‡∏ô` - ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•
‚Ä¢ `‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö` - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ó‡∏±‡∏Å‡∏©‡∏∞
‚Ä¢ `‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á` - ‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó

**üèÜ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©:**
‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ï‡∏≤‡∏°‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•
üìä ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå
üéØ ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
üí™ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô

‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢! üöÄ
''',
type: MessageType.system,
);
}

AIResponse _generateQuizResponse(UserProfile profile) {
final availableQuestions = _quizQuestions.where((q) {
switch (profile.level) {
case UserLevel.beginner:
return q.difficulty == CommandLevel.beginner;
case UserLevel.intermediate:
return q.difficulty == CommandLevel.beginner ||
q.difficulty == CommandLevel.intermediate;
case UserLevel.advanced:
return q.difficulty != CommandLevel.expert;
case UserLevel.expert:
return true;
}
}).toList();

if (availableQuestions.isEmpty) {
return AIResponse(
text: '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
type: MessageType.error,
);
}

final question = availableQuestions[_random.nextInt(availableQuestions.length)];
final optionsText = question.options
    .asMap()
    .entries
    .map((entry) => '${entry.key + 1}. ${entry.value}')
    .join('\n');

return AIResponse(
text: '''
üìù **‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö - ${question.difficulty.displayName}**

**‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°:** ${question.question}

$optionsText

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç (1-${question.options.length}) ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö

üí° *‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö: ‡∏Ñ‡∏¥‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ï‡∏≠‡∏ö*
''',
type: MessageType.quiz,
category: 'quiz',
);
}

AIResponse _getStatsResponse(UserProfile profile) {
final progressPercent = profile.progressPercentage;
final exp = profile.experiencePoints;
final nextLevelExp = _getNextLevelExp(profile.level);

return AIResponse(
text: '''
üìä **‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ç‡∏≠‡∏á ${profile.name}**

**üéØ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:** ${profile.level.emoji} ${profile.level.displayName}
**‚≠ê ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå:** $exp XP
**üìà ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤:** ${progressPercent.toStringAsFixed(1)}%

**üìö ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ:**
‚Ä¢ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ: ${profile.learnedCommands.length} ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
‚Ä¢ ‡∏Å‡∏≤‡∏£‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${profile.totalInteractions} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
‚Ä¢ ‡∏ß‡∏±‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô: ${profile.streakDays} ‡∏ß‡∏±‡∏ô üî•

**üèÜ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:** ${profile.achievements.length} ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•
${profile.achievements.take(3).map((a) => '${a.icon} ${a.title}').join('\n')}

**üìã ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:**
${profile.learnedCommands.take(5).map((cmd) => '‚Ä¢ $cmd').join('\n')}

${_getEncouragementMessage(profile)}
''',
type: MessageType.system,
);
}

int _getNextLevelExp(UserLevel level) {
switch (level) {
case UserLevel.beginner: return 600;
case UserLevel.intermediate: return 1200;
case UserLevel.advanced: return 2000;
case UserLevel.expert: return 3000;
}
}

String _getEncouragementMessage(UserProfile profile) {
if (profile.streakDays >= 7) {
return 'üî• **‡∏™‡∏∏‡∏î‡∏¢‡∏≠‡∏î!** ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô‡∏°‡∏≤ ${profile.streakDays} ‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß!';
} else if (profile.learnedCommands.length >= 10) {
return 'üåü **‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å!** ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ${profile.learnedCommands.length} ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á!';
} else {
return 'üí™ **‡πÄ‡∏Å‡πá‡∏ö!** ‡∏°‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡πÜ ‡∏Å‡∏±‡∏ô‡∏ï‡πà‡∏≠!';
}
}

AIResponse _getResetConfirmation() {
return AIResponse(
text: '''
‚ö†Ô∏è **‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•**

‡∏Å‡∏≤‡∏£‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏à‡∏∞‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:
‚Ä¢ ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
‚Ä¢ ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ
‚Ä¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
‚Ä¢ ‡∏ß‡∏±‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô

**‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå (‡∏ä‡∏∑‡πà‡∏≠, ‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢) ‡∏à‡∏∞‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏≠‡∏¢‡∏π‡πà**

‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï"
‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å"
''',
type: MessageType.warning,
);
}

AIResponse _generateCommandResponse(String command, UserProfile profile) {
final cmd = _commandDb.getCommand(command);
if (cmd == null) {
return AIResponse(
text: '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á $command',
type: MessageType.error,
);
}

final difficulty = _getDifficultyIndicator(cmd.level);
final categoryIcon = cmd.category.emoji;

String response = '''
$categoryIcon **‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: `$command`** $difficulty

üìù **‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:** ${cmd.description}

‚ö° **‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:**
```
${cmd.syntax}
```

üí° **‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:**
${cmd.examples.map((e) => '‚Ä¢ `$e`').join('\n')}
''';

if (cmd.options.isNotEmpty) {
response += '\n\nüîß **‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:**\n';
response += cmd.options.take(4).map((opt) => '‚Ä¢ $opt').join('\n');
}

if (cmd.warning != null) {
response += '\n\n${cmd.warning}';
}

if (cmd.tips.isNotEmpty) {
response += '\n\nüí° **‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö:**\n';
response += cmd.tips.take(2).map((tip) => '‚Ä¢ $tip').join('\n');
}

if (cmd.relatedCommands.isNotEmpty) {
response += '\n\nüîó **‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á:** ';
response += cmd.relatedCommands.take(3).map((c) => '`$c`').join(', ');
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
response += _getPersonalizedTip(cmd, profile);

return AIResponse(
text: response,
type: MessageType.command,
command: command,
explanation: cmd.description,
category: cmd.category.name,
);
}

String _getDifficultyIndicator(CommandLevel level) {
switch (level) {
case CommandLevel.beginner:
return 'üü¢ ‡∏á‡πà‡∏≤‡∏¢';
case CommandLevel.intermediate:
return 'üü° ‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á';
case CommandLevel.advanced:
return 'üü† ‡∏¢‡∏≤‡∏Å';
case CommandLevel.expert:
return 'üî¥ ‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç';
}
}

String _getPersonalizedTip(LinuxCommand cmd, UserProfile profile) {
String tip = '\n\n';

if (profile.level == UserLevel.beginner && cmd.level != CommandLevel.beginner) {
tip += 'üìö **‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà:** ‡∏•‡∏≠‡∏á‡∏ù‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ls, cd, pwd';
} else if (profile.commandUsage[cmd.name] == null) {
tip += 'üÜï **‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì!** ‡∏•‡∏≠‡∏á‡∏ù‡∏∂‡∏Å‡πÉ‡∏ä‡πâ‡∏î‡∏π';
} else if ((profile.commandUsage[cmd.name] ?? 0) > 5) {
tip += '‚≠ê **‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏î‡∏µ‡πÅ‡∏•‡πâ‡∏ß!** ‡∏•‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á‡∏ï‡πà‡∏≠';
}

return tip;
}

AIResponse _getBeginnerRecommendations(UserProfile profile) {
final beginnerCommands = _commandDb.getCommandsByLevel(CommandLevel.beginner);
final unlearned = beginnerCommands.where((cmd) =>
!profile.learnedCommands.contains(cmd.name)
).take(5).toList();

String response = '''
üéì **‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô**

‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á:

''';

if (unlearned.isNotEmpty) {
response += '**üÜï ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:**\n';
for (var cmd in unlearned) {
response += '${cmd.category.emoji} **`${cmd.name}`** - ${cmd.description}\n';
}
}

response += '''

**üìö ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ:**
1Ô∏è‚É£ **‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á:** `pwd`, `ls`, `cd`
2Ô∏è‚É£ **‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå:** `mkdir`, `touch`, `cp`, `mv`
3Ô∏è‚É£ **‡∏î‡∏π‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤:** `cat`, `less`, `head`, `tail`
4Ô∏è‚É£ **‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤:** `find`, `grep`

‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î! üöÄ
''';

return AIResponse(
text: response,
type: MessageType.explanation,
category: 'recommendations',
);
}

AIResponse _getFileManagementCommands() {
return AIResponse(
text: '''
üìÅ **‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå**

**üÜï ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏•‡∏ö:**
‚Ä¢ `mkdir` - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
‚Ä¢ `touch` - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ß‡πà‡∏≤‡∏á
‚Ä¢ `rm` - ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå/‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
‚Ä¢ `rmdir` - ‡∏•‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ß‡πà‡∏≤‡∏á

**üìã ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡∏¢‡πâ‡∏≤‡∏¢:**
‚Ä¢ `cp` - ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå/‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
‚Ä¢ `mv` - ‡∏¢‡πâ‡∏≤‡∏¢/‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠
‚Ä¢ `rsync` - ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡πÑ‡∏ü‡∏•‡πå

**üëÅÔ∏è ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:**
‚Ä¢ `ls` - ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå
‚Ä¢ `file` - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå
‚Ä¢ `du` - ‡∏î‡∏π‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
‚Ä¢ `df` - ‡∏î‡∏π‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏™‡∏Å‡πå

‡∏•‡∏≠‡∏á‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏î‡∏Å‡πá‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î!
''',
type: MessageType.explanation,
category: 'file_management',
);
}

AIResponse _getNavigationCommands() {
return AIResponse(
text: '''
üß≠ **‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ü‡∏•‡πå**

**üìç ‡∏î‡∏π‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:**
‚Ä¢ `pwd` - ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
‚Ä¢ `ls` - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
‚Ä¢ `tree` - ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ö‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ

**üö∂ ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á:**
‚Ä¢ `cd` - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ
‚Ä¢ `cd ..` - ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏°‡πà
‚Ä¢ `cd ~` - ‡∏Å‡∏•‡∏±‡∏ö home directory
‚Ä¢ `cd -` - ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤

**üîç ‡∏™‡∏≥‡∏£‡∏ß‡∏à:**
‚Ä¢ `find` - ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå/‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
‚Ä¢ `locate` - ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß
‚Ä¢ `which` - ‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°

**üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö:**
‚Ä¢ ‡πÉ‡∏ä‡πâ Tab ‡πÄ‡∏û‡∏∑‡πà‡∏≠ auto-complete ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
‚Ä¢ `..` = ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏°‡πà, `.` = ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
‚Ä¢ `~` = home directory

‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏´‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏Ñ‡∏£‡∏±‡∏ö?
''',
type: MessageType.explanation,
category: 'navigation',
);
}

AIResponse _getSearchCommands() {
return AIResponse(
text: '''
üîç **‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•**

**üéØ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå:**
‚Ä¢ `find` - ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
‚Ä¢ `locate` - ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
‚Ä¢ `which` - ‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á/‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
‚Ä¢ `whereis` - ‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå binary ‡πÅ‡∏•‡∏∞ manual

**üìù ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:**
‚Ä¢ `grep` - ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ pattern ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå
‚Ä¢ `egrep` - grep ‡πÅ‡∏ö‡∏ö extended regex
‚Ä¢ `fgrep` - grep ‡πÅ‡∏ö‡∏ö fixed string
‚Ä¢ `rgrep` - grep ‡πÅ‡∏ö‡∏ö recursive

**üîß ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:**
```bash
find . -name "*.txt"           # ‡∏´‡∏≤ .txt ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
grep -r "error" /var/log       # ‡∏´‡∏≤ error ‡πÉ‡∏ô log
locate filename                # ‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß
```

**üí° Pro Tips:**
‚Ä¢ ‡πÉ‡∏ä‡πâ wildcards (*,?) ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
‚Ä¢ ‡πÉ‡∏ä‡πâ -i ‡∏Å‡∏±‡∏ö grep ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÉ‡∏à‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå
‚Ä¢ ‡πÉ‡∏ä‡πâ pipe (|) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á

‡∏™‡∏ô‡πÉ‡∏à‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏´‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏Ñ‡∏£‡∏±‡∏ö?
''',
type: MessageType.explanation,
category: 'search',
);
}

AIResponse _getPermissionCommands() {
return AIResponse(
text: '''
üîê **‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢**

**üë§ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á:**
‚Ä¢ `chown` - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå
‚Ä¢ `chgrp` - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå
‚Ä¢ `sudo` - ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå admin

**üîß ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå:**
‚Ä¢ `chmod` - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á
‚Ä¢ `umask` - ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô

**üìä ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå:**
‚Ä¢ `ls -l` - ‡∏î‡∏π‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÑ‡∏ü‡∏•‡πå
‚Ä¢ `id` - ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡πÅ‡∏•‡∏∞ group
‚Ä¢ `whoami` - ‡∏î‡∏π‡∏ä‡∏∑‡πà‡∏≠ user ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô

**üî¢ ‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡πà‡∏≠‡∏¢:**
‚Ä¢ `755` = rwxr-xr-x (‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°)
‚Ä¢ `644` = rw-r--r-- (‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)
‚Ä¢ `600` = rw------- (‡πÑ‡∏ü‡∏•‡πå‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß)
‚Ä¢ `777` = rwxrwxrwx (‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢!)

**‚ö†Ô∏è ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:**
‚Ä¢ ‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÉ‡∏ä‡πâ sudo ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢
‚Ä¢ ‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ chmod 777 ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏û‡∏¥‡πÄ‡∏®‡∏©
‚Ä¢ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á

‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö?
''',
type: MessageType.explanation,
category: 'permissions',
);
}

AIResponse _getPersonalizedRecommendations(UserProfile profile) {
String response = '''
üéØ **‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${profile.name}**

**üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:**
‚Ä¢ ‡∏£‡∏∞‡∏î‡∏±‡∏ö: ${profile.level.emoji} ${profile.level.displayName}
‚Ä¢ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏π‡πâ: ${profile.learnedCommands.length} ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
‚Ä¢ ‡∏ß‡∏±‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô: ${profile.streakDays} ‡∏ß‡∏±‡∏ô üî•

''';

// ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö
if (profile.learnedCommands.length < 5) {
response += '''
**üå± ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô:**
‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô:
‚Ä¢ `pwd` - ‡∏î‡∏π‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
‚Ä¢ `ls` - ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå
‚Ä¢ `cd` - ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
‚Ä¢ `mkdir` - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå

**üéØ ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏£‡∏∞‡∏¢‡∏∞‡∏™‡∏±‡πâ‡∏ô:** ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ 5 ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
''';
} else if (profile.learnedCommands.length < 12) {
response += '''
**üåø ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏•‡∏≤‡∏á:**
‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ:
‚Ä¢ `grep` - ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
‚Ä¢ `find` - ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå
‚Ä¢ `chmod` - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
‚Ä¢ `ps` - ‡∏î‡∏π‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£

**üéØ ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏£‡∏∞‡∏¢‡∏∞‡∏™‡∏±‡πâ‡∏ô:** ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö
''';
} else {
response += '''
**üå≥ ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏π‡∏á:**
‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á:
‚Ä¢ `awk` - ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
‚Ä¢ `sed` - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
‚Ä¢ `systemctl` - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ services
‚Ä¢ `crontab` - ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏á‡∏≤‡∏ô

**üéØ ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß:** ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ scripting ‡πÅ‡∏•‡∏∞ automation
''';
}

// ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏≤‡∏° streak
if (profile.streakDays == 0) {
response += '\nüí™ **‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏¥‡∏™‡∏±‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ:** ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏ß‡∏±‡∏ô‡∏•‡∏∞ 1 ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á';
} else if (profile.streakDays < 7) {
response += '\nüî• **‡πÄ‡∏Å‡πá‡∏ö!** ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏≠‡∏µ‡∏Å ${7 - profile.streakDays} ‡∏ß‡∏±‡∏ô‡∏à‡∏∞‡∏Ñ‡∏£‡∏ö‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå';
} else {
response += '\nüèÜ **‡∏™‡∏∏‡∏î‡∏¢‡∏≠‡∏î!** ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô‡∏°‡∏≤ ${profile.streakDays} ‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß!';
}

// ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à
final mostUsedCategory = _getMostUsedCategory(profile);
if (mostUsedCategory != null) {
response += '\n\nüéØ **‡∏Ñ‡∏∏‡∏ì‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á ${mostUsedCategory.displayName}** ‡∏•‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏ô‡∏µ‡πâ:';
final categoryCommands = _commandDb.getCommandsByCategory(mostUsedCategory);
final unlearned = categoryCommands.where((cmd) =>
!profile.learnedCommands.contains(cmd.name)
).take(3);
for (var cmd in unlearned) {
response += '\n‚Ä¢ `${cmd.name}` - ${cmd.description}';
}
}

return AIResponse(
text: response,
type: MessageType.explanation,
category: 'recommendations',
);
}

CommandCategory? _getMostUsedCategory(UserProfile profile) {
final categoryCount = <CommandCategory, int>{};

for (final cmdName in profile.learnedCommands) {
final cmd = _commandDb.getCommand(cmdName);
if (cmd != null) {
categoryCount[cmd.category] = (categoryCount[cmd.category] ?? 0) + 1;
}
}

if (categoryCount.isEmpty) return null;

return categoryCount.entries
    .reduce((a, b) => a.value > b.value ? a : b)
    .key;
}

AIResponse _getLevelAssessment(UserProfile profile) {
final commandCount = profile.learnedCommands.length;
final exp = profile.experiencePoints;
final calculatedLevel = profile.calculatedLevel;

String assessment = '''
üìä **‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ**

**üèÖ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:** ${profile.level.emoji} ${profile.level.displayName}
''';

if (calculatedLevel != profile.level) {
assessment += '''
**üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢!** ‡∏Ñ‡∏∏‡∏ì‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô ${calculatedLevel.emoji} ${calculatedLevel.displayName}!

''';
}

assessment += '''
**üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û:**
‚Ä¢ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ: $commandCount ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
‚Ä¢ ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå: $exp XP
‚Ä¢ ‡∏ß‡∏±‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: ${profile.streakDays} ‡∏ß‡∏±‡∏ô
‚Ä¢ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö: ${profile.achievements.length} ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•

**üìã ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ó‡∏±‡∏Å‡∏©‡∏∞:**
${_getSkillAnalysis(profile)}

**üéØ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡πà‡∏≠:**
${_getNextStepRecommendations(profile)}
''';

return AIResponse(
text: assessment,
type: MessageType.explanation,
category: 'assessment',
);
}

String _getSkillAnalysis(UserProfile profile) {
final categories = CommandCategory.values;
final analysis = <String>[];

for (final category in categories) {
final categoryCommands = _commandDb.getCommandsByCategory(category);
final learnedInCategory = categoryCommands.where((cmd) =>
profile.learnedCommands.contains(cmd.name)
).length;

if (learnedInCategory > 0) {
final percentage = (learnedInCategory / categoryCommands.length * 100).round();
final level = _getCategoryLevel(percentage);
analysis.add('${category.emoji} ${category.displayName}: $level ($percentage%)');
}
}

return analysis.isEmpty ? '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ' : analysis.take(5).join('\n');
}

String _getCategoryLevel(int percentage) {
if (percentage >= 80) return 'üåü ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç';
if (percentage >= 60) return 'üî• ‡∏î‡∏µ';
if (percentage >= 40) return '‚ö° ‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á';
if (percentage >= 20) return 'üå± ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô';
return 'üìö ‡∏ï‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤';
}

String _getNextStepRecommendations(UserProfile profile) {
switch (profile.calculatedLevel) {
case UserLevel.beginner:
return '''
‚Ä¢ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô: pwd, ls, cd, mkdir
‚Ä¢ ‡∏ù‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ü‡∏•‡πå
‚Ä¢ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏á‡πà‡∏≤‡∏¢''';

case UserLevel.intermediate:
return '''
‚Ä¢ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤: grep, find
‚Ä¢ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÑ‡∏ü‡∏•‡πå: chmod, chown
‚Ä¢ ‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô pipe ‡πÅ‡∏•‡∏∞ redirection''';

case UserLevel.advanced:
return '''
‚Ä¢ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ text processing: awk, sed
‚Ä¢ ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ processes: ps, top, kill
‚Ä¢ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ô shell scripting''';

case UserLevel.expert:
return '''
‚Ä¢ ‡∏û‡∏±‡∏í‡∏ô‡∏≤ automation scripts
‚Ä¢ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ system administration
‚Ä¢ ‡πÅ‡∏ä‡∏£‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô''';
}
}

AIResponse _getCategoryOverview() {
return AIResponse(
text: '''
üìö **‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Linux**

**üß≠ ‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á (Navigation)**
‚Ä¢ pwd, ls, cd, tree
‚Ä¢ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ü‡∏•‡πå

**üìÅ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå (File Management)**
‚Ä¢ mkdir, cp, mv, rm, find
‚Ä¢ ‡∏™‡∏£‡πâ‡∏≤‡∏á ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å ‡∏¢‡πâ‡∏≤‡∏¢ ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå

**üìù ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (Text Processing)**
‚Ä¢ cat, grep, awk, sed, sort
‚Ä¢ ‡∏≠‡πà‡∏≤‡∏ô ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°

**üîê ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå (Permissions)**
‚Ä¢ chmod, chown, sudo
‚Ä¢ ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏ü‡∏•‡πå

**‚öôÔ∏è ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö (System Admin)**
‚Ä¢ ps, top, systemctl, crontab
‚Ä¢ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£

**üåê ‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢ (Networking)**
‚Ä¢ ping, wget, curl, ssh
‚Ä¢ ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢

**üì¶ ‡∏ö‡∏µ‡∏ö‡∏≠‡∏±‡∏î‡πÑ‡∏ü‡∏•‡πå (Archive)**
‚Ä¢ tar, gzip, zip, unzip
‚Ä¢ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ö‡∏µ‡∏ö‡∏≠‡∏±‡∏î

‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!
''',
type: MessageType.explanation,
category: 'overview',
);
}

AIResponse _getGeneralResponse(UserProfile profile) {
final responses = [
'''
‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ${profile.name}! üëã

‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Linux ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡∏Ñ‡∏£‡∏±‡∏ö?

üí° **‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°:**
‚Ä¢ "ls ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£" - ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞
‚Ä¢ "‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô" - ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
‚Ä¢ "‡∏ß‡∏¥‡∏ò‡∏µ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå" - ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
‚Ä¢ "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ" - ‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
''',
'''
‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ñ‡∏£‡∏±‡∏ö? ü§ñ

‡∏ú‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Linux ‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö

üéØ **‡∏•‡∏≠‡∏á‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö:**
‚Ä¢ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à ‡πÄ‡∏ä‡πà‡∏ô "grep", "chmod"
‚Ä¢ ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞ ‡πÄ‡∏ä‡πà‡∏ô "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå"
‚Ä¢ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö
''',
'''
‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ Linux ‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á? üöÄ

üìö **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏ú‡∏°‡∏°‡∏µ:**
‚Ä¢ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏ñ‡∏∂‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á
‚Ä¢ ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
‚Ä¢ ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏ö‡∏ö‡∏ù‡∏∂‡∏Å‡∏´‡∏±‡∏î
‚Ä¢ ‡∏Å‡∏≤‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•

‡∏•‡∏≠‡∏á‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à‡∏°‡∏≤‡∏Ñ‡∏£‡∏±‡∏ö!
''',
];

final selectedResponse = responses[_random.nextInt(responses.length)];

return AIResponse(
text: selectedResponse,
type: MessageType.text,
);
}

void _updateUserProgress(UserProfile profile, String command) {
profile.addLearnedCommand(command);
profile.incrementCommandUsage(command);
}

// Quiz handling methods
Future<AIResponse> handleQuizAnswer(String answer, QuizQuestion question, UserProfile profile) async {
// Parse answer (number or text)
int? selectedOption;

if (RegExp(r'^\d+import 'dart:math';
import '../models/message.dart';
import '../models/user_profile.dart';
import '../models/linux_command.dart';

class AIService {
static final AIService _instance = AIService._internal();
factory AIService() => _instance;
AIService._internal();

final LinuxCommandDatabase _commandDb = LinuxCommandDatabase();
final Random _random = Random();

// Quiz questions database
final List<QuizQuestion> _quizQuestions = [
QuizQuestion(
id: 'q1',
question: '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏î‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ?',
options: ['ls', 'cd', 'pwd', 'mkdir'],
correctAnswer: 0,
explanation: 'ls (list) ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏ô‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ',
difficulty: CommandLevel.beginner,
relatedCommand: 'ls',
),
QuizQuestion(
id: 'q2',
question: '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏î‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ?',
options: ['ls', 'cd', 'pwd', 'mkdir'],
correctAnswer: 1,
explanation: 'cd (change directory) ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô',
difficulty: CommandLevel.beginner,
relatedCommand: 'cd',
),
QuizQuestion(
id: 'q3',
question: 'option -r ‡πÉ‡∏ô rm ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?',
options: ['read-only', 'recursive', 'reverse', 'restore'],
correctAnswer: 1,
explanation: '-r ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á recursive ‡∏Ñ‡∏∑‡∏≠‡∏•‡∏ö‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
difficulty: CommandLevel.intermediate,
relatedCommand: 'rm',
),
QuizQuestion(
id: 'q4',
question: '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏î‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå?',).hasMatch(answer.trim())) {
selectedOption = int.tryParse(answer.trim());
if (selectedOption != null) selectedOption--; // Convert to 0-based index
} else {
// Try to match answer text
for (int i = 0; i < question.options.length; i++) {
if (question.options[i].toLowerCase() == answer.toLowerCase().trim()) {
selectedOption = i;
break;
}
}
}

if (selectedOption == null || selectedOption < 0 || selectedOption >= question.options.length) {
return AIResponse(
text: '''
‚ùå **‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á**

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç 1-${question.options.length} ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å

**‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:**
${question.options.asMap().entries.map((e) => '${e.key + 1}. ${e.value}').join('\n')}
''',
type: MessageType.error,
);
}

final isCorrect = selectedOption == question.correctAnswer;
final selectedAnswer = question.options[selectedOption];
final correctAnswer = question.options[question.correctAnswer];

// Update profile with quiz result
final quizResult = QuizResult(
id: 'quiz_${DateTime.now().millisecondsSinceEpoch}',
quizId: question.id,
title: '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß',
score: isCorrect ? 1 : 0,
totalQuestions: 1,
completedAt: DateTime.now(),
timeSpent: 60, // Assume 1 minute
difficulty: question.difficulty.name,
incorrectAnswers: isCorrect ? [] : [selectedAnswer],
);

profile.addQuizResult(quizResult);

String response;
MessageType responseType;

if (isCorrect) {
response = '''
‚úÖ **‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! ‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°!** üéâ

**‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:** $selectedAnswer

**üí° ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:** ${question.explanation}

**üéØ ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô:** +10 XP
**üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥:** ‡∏ï‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å ${profile.quizHistory.where((q) => q.passed).length}/${profile.quizHistory.length} ‡∏Ç‡πâ‡∏≠

‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á? ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ï‡πà‡∏≠" üöÄ
''';
responseType = MessageType.success;

// Add experience points
profile.studyStats.totalStudyTime += 2; // 2 minutes for correct answer
} else {
response = '''
‚ùå **‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£!** üí™

**‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:** $selectedAnswer
**‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å:** $correctAnswer

**üí° ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢:** ${question.explanation}

**üìö ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:** ${_getStudyRecommendation(question)}

‡∏•‡∏≠‡∏á‡∏ó‡∏≥‡∏Ç‡πâ‡∏≠‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏î‡∏π ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ï‡πà‡∏≠" üìñ
''';
responseType = MessageType.warning;
}

return AIResponse(
text: response,
type: responseType,
category: 'quiz_result',
);
}

String _getStudyRecommendation(QuizQuestion question) {
if (question.relatedCommand != null) {
return '‡∏•‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `${question.relatedCommand}` ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°';
}
return '‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ô‡∏µ‡πâ';
}
}

// Helper class for AI responses
class AIResponse {
final String text;
final MessageType type;
final String? command;
final String? explanation;
final String? category;

AIResponse({
required this.text,
this.type = MessageType.text,
this.command,
this.explanation,
this.category,
});
}import 'dart:math';
import '../models/message.dart';
import '../models/user_profile.dart';
import '../models/linux_command.dart';

class AIService {
static final AIService _instance = AIService._internal();
factory AIService() => _instance;
AIService._internal();

final LinuxCommandDatabase _commandDb = LinuxCommandDatabase();
final Random _random = Random();

// Quiz questions database
final List<QuizQuestion> _quizQuestions = [
QuizQuestion(
id: 'q1',
question: '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏î‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ?',
options: ['ls', 'cd', 'pwd', 'mkdir'],
correctAnswer: 0,
explanation: 'ls (list) ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏ô‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ',
difficulty: CommandLevel.beginner,
relatedCommand: 'ls',
),
QuizQuestion(
id: 'q2',
question: '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏î‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ?',
options: ['ls', 'cd', 'pwd', 'mkdir'],
correctAnswer: 1,
explanation: 'cd (change directory) ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô',
difficulty: CommandLevel.beginner,
relatedCommand: 'cd',
),
QuizQuestion(
id: 'q3',
question: 'option -r ‡πÉ‡∏ô rm ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?',
options: ['read-only', 'recursive', 'reverse', 'restore'],
correctAnswer: 1,
explanation: '-r ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á recursive ‡∏Ñ‡∏∑‡∏≠‡∏•‡∏ö‡πÑ‡∏î‡πÄ‡∏£‡∏Å‡∏ó‡∏≠‡∏£‡∏µ‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
difficulty: CommandLevel.intermediate,
relatedCommand: 'rm',
),
QuizQuestion(
id: 'q4',
question: '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏î‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå?',